drepturi si alte cele

-u: user    The owner of file or directory. Usually, the file creator is its owner

-g: group   A set of users that need identical access on files and directories that they share. Group information is maintained in the /etc/group file and users
are assigned to groups according to shared file access needs.

-o: other   All other users on the system except for the owner and group members. Also called public.

r: read   4
- file:        lets us view the contents and copy them to another file
- directory:   lets us view the content of the directory
w: write  2
- file:        allow to modify content
- directory:   allows to create, remove or rename files or subdirectories
x: excute 1
- file:        allow to execute file
- directory:   allow to cd in directory

add(+)        allocate permission
revoke(-)     remove permission
assign(=)     allocates permissions to owner, group members and public at once

chmod - command to modify access rights on files and directories


umask 
The umask is a three-digit value that refers to read/write/execute permissions for owner, group, and public. Its purpose
is to set default permissions on new files and directories created without touching the existing files and directories. In
RHEL, the default umask value is set to 0022 for the root and other system users and 0002 for all regular users with
bash shell assigned. Note that the left-most 0 has no significance

umask - display current umask value

The pre-defined initial permission values are 666 (rw-rw-rw-) for files and 777 (rwxrwxrwx) for directories. Even if
the umask is set to 000, the new files will always get a maximum of 666 permissions, and we use the chmod command
to add executable bits explicitly if desired.

ex:
For instance, if you want all your new files and directories to get 640 and 750 permissions, 
respectively, you can set the value to 027 as follows:
$ umask 027

chown and chgrp commands that you can use to alter ownership and owning group for files and
directories; however, you must be root to make these modifications.

PERMISII SPECIALE 

The setuid Bit on Executable Files
The setuid flag is set on executable files at the file owner level. With this bit set, the file is executed by other regular
users with the same privileges as that of the file owner.

chmod u+s 

The setgid Bit on Executable Files
The setgid attribute is set on executable files at the group level. With this bit set, the file is executed by non-owners with
the exact same privileges that the group members have.

chmod g+s

The setgid bit can also be set on group-shared directories to allow files and sub-directories created in that directory to
automatically inherit the directory’s owning group. This saves group members sharing the directory contents from
changing the group on every new file and sub-directory that they add to that directory. The standard behavior for new
files and sub-directories is to always receive the creator’s group.

The setgid Bit on Shared Directories
The sticky bit is set on public writable directories (or other directories with rw permissions for everyone) to protect
files and sub-directories owned by regular users from being deleted or moved by other regular users.

chmod o+t
