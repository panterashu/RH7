The Access Control Lists (ACLs) provide an extended group of permissions that may be set on files and directories.

The ACLs allow us to define permissions for specific users and groups using either the octal or symbolic notation of permission
allocation. The specific users may or may not be part of the same group. ACLs are configured and treated the same
way on both files and directories. Before any ACLs are applied to a file or directory, the file system it is located in has to
be mounted or remounted with ACL support enabled. This support is turned on for XFS file systems by default;
however, it needs to be activated for extended file systems. ACLs can also be used on both NFS and CIFS file systems.

ACLs are categorized into two groups based on their types, and are referred to as access ACLs and default ACLs.
Access ACLs are set on individual files and directories whereas default ACLs can only be applied at the directory level.
Files and sub-directories under a parent directory with default ACLs set inherit the default ACL settings.
####################################################################################################
comenzi utile
- chacl       Changes ACL settings on a file or directory. Available for users who are familiar with its use from IRIX UNIX.

- getfacl     Displays ACL settings for a file or directory.

- setfacl     Sets, modifies, substitutes, and deletes ACL settings on a file or directory.

####################################################################################################
setfacl
-b Removes all ACL settings.
-d Applies to the default ACLs.
-k Removes all default ACL settings.
-m Sets or modifies ACL settings.
-R Applies recursively to all files and sub-directories.
-x Removes an ACL setting.

The setfacl command is used to apply or modify ACL settings on a file or directory. The way it accepts specific
permissions at the command line is explained:

u[ser]:UID:perms Permissions assigned to a specific user (user name or UID). The user must exist in the /etc/passwd file.

g[roup]:GID:perms Permissions assigned to a specific group (group name or GID). The group must exist in the /etc/group file.

m[ask]:perms Maximum permissions a specific user or a specific group can have on a file or directory. If this is set to rw-, for example, then no specific user or
group will have more permissions than read and write.

o[ther]:perms Permissions assigned to users not in the owning group.

The Role of the mask Value

The value of mask determines the maximum allowable permissions placed for a specific user or group on a file or
directory. If it is set to rw, for instance, no specific user or group will exceed those permissions. The mask value is
displayed on a separate line in the getfacl command output. Each time ACLs are modified for a file or directory, the
mask is recalculated automatically and applied unless we supply our own desired mask value with the command.

